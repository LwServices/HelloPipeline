# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:


    #runs-on: ubuntu-latest
    runs-on: windows-latest 

    defaults:
      run:
        working-directory: ./ConsolePipeline

    env:
      Solution_Name: ConsolePipeline.sln 
      Solution_Path: ConsolePipeline
      BuildVersion: '8.1.${{ github.run_number }}'

    steps:
    - uses: actions/checkout@v3
  
    - name: Setup .NET  
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        #https://github.com/marketplace/actions/get-csproj-version
    #- name: version
    #  id: generate_version
    #  run: echo "::set-output name=version::1.35.$(($GITHUB_RUN_NUMBER))"

    - name: Restore dependencies
      run: dotnet restore
  
    - name: Build
      run: dotnet build --no-restore

    - name: Release Build
      run: dotnet build --no-restore --configuration Release -p:Deterministic=true -p:ContinuousIntegrationBuild=true

    - name: Publish
      #run:  dotnet publish -c Release -p:Version=${{ steps.generate_version.outputs.version }} -p:FileVersion=${{ steps.generate_version.outputs.version }} -o ./pub -p:PublishSingleFile=true --self-contained true
      run:  dotnet publish -c Release -p:Version=${{ env.BuildVersion }} -p:FileVersion=${{ env.BuildVersion }} -o ./pub -p:PublishSingleFile=true --self-contained true

    #- name: Pack
    #  run: dotnet pack --output nupkgs --no-build

    - name: Zip
      run:  zip -r Release.zip ./pub/


    - uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: ./ConsolePipeline/Release.zip

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.BuildVersion }}
        release_name: Hello Pipeline v${{ env.BuildVersion }}
        draft: false
        prerelease: false

    - name: upload artifact  
      uses: actions/upload-release-asset@v1      
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ConsolePipeline/Release.zip
        asset_name: Hello.zip 
        asset_content_type: application/zip
